package com.course.courseselection.service;import com.course.courseselection.command.CourseCommand;import com.course.courseselection.command.CourseListResponse;import com.course.courseselection.command.CourseResponse;import com.course.courseselection.command.CourseSelectionCommand;import com.course.courseselection.entity.Course;import com.course.courseselection.entity.StudentData;import com.course.courseselection.repository.CourseRepository;import com.course.courseselection.repository.StudentRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;import java.util.stream.Collectors;@Servicepublic class CourseService {    @Autowired    private CourseRepository courseRepository;    @Autowired    private StudentRepository studentRepository;    public void add(CourseCommand courseCommand) {        Course entity = new Course();        entity.setCourse(courseCommand.getCourse());        courseRepository.save(entity);    }    public void select(CourseSelectionCommand command) {        StudentData studentData = studentRepository.findById(command.getStudentId()).get();        List<Course> courses = command.getCourseIds().stream().map(courseId -> {            Optional<Course> courseById = courseRepository.findById(courseId);            return courseById.get();        }).collect(Collectors.toList());        studentData.setCourses(courses);        studentRepository.save(studentData);    }    public CourseListResponse query() {        List<Course> all = courseRepository.findAll();        List<CourseResponse> courseResponseList = all.stream().map(course -> {            CourseResponse courseResponse = new CourseResponse();            courseResponse.setId(course.getId());            courseResponse.setCourse(course.getCourse());            return courseResponse;        }).collect(Collectors.toList());        CourseListResponse courseListResponse = new CourseListResponse();        courseListResponse.setCourses(courseResponseList);        return courseListResponse;    }}